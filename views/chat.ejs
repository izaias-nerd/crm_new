
<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crm New chat</title>
    <style>
      body { margin: 0; padding-bottom: 3rem; font-family: Arial, sans-serif; }
      #form { background: rgba(0, 0, 0, 0.15); padding: 0.25rem; position: fixed; bottom: 0; left: 0; right: 0; display: flex; height: 3rem; box-sizing: border-box; backdrop-filter: blur(10px); }
      #input { border: none; padding: 0 1rem; flex-grow: 1; border-radius: 2rem; margin: 0.25rem; }
      #input:focus { outline: none; }
      #form > button { background: #333; border: none; padding: 0 1rem; margin: 0.25rem; border-radius: 3px; outline: none; color: #fff; }
      #messages { list-style-type: none; margin: 0; padding: 0; }
      #messages > li { padding: 0.5rem 1rem; }
      #messages > li:nth-child(odd) { background: #efefef; }
    </style>
  </head>
  <body>
    <input id="username" placeholder="Digite seu nome" required />
    <button id="register">Registrar</button>
    <ul id="messages"></ul>
    <form id="form" action="">
      <input id="input" autocomplete="off" /><button>Send</button>
    </form>
    <script src="https://cdn.socket.io/4.8.1/socket.io.min.js"></script>
    <script>
      const socket = io();
      const form = document.getElementById('form');
      const input = document.getElementById('input');
      const messages = document.getElementById('messages');
      const registerBtn = document.getElementById('register');
      const usernameInput = document.getElementById('username');
  
      let isRegistered = false; // Variável para controlar o registro do usuário
  
      // Função para enviar o nome ao servidor
      registerBtn.addEventListener('click', () => {
        const username = usernameInput.value.trim();
        if (username) {
          socket.emit('register', username);
          console.log(`Usuário registrado: ${username}`);
          isRegistered = true; // Marca o usuário como registrado
          usernameInput.style.display = 'none';
          registerBtn.style.display = 'none';
        } else {
          alert('Por favor, insira um nome válido.');
        }
      });
  
      // Recebe mensagens do servidor
      socket.on('chat message', ({ username, msg }) => {
        const item = document.createElement('li');
        item.textContent = `${username}: ${msg}`;
        messages.appendChild(item);
        window.scrollTo(0, document.body.scrollHeight);
      });
  
      // Envia mensagens ao servidor
      form.addEventListener('submit', (e) => {
        e.preventDefault();
        if (!isRegistered) {
          alert('Você precisa se registrar antes de enviar mensagens.');
          return;
        }
        if (input.value) {
          socket.emit('chat message', input.value);
          input.value = '';
        }
      });
    </script>
  </body>
  
</html>
